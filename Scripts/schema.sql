-- Location Table
CREATE TABLE IF NOT EXISTS LOCATION (
	COUNTRY VARCHAR(50) NOT NULL,
	STATE VARCHAR(50) NOT NULL,
    -- Composite Primary Key
	PRIMARY KEY (COUNTRY, STATE)
);

-- Field Table
CREATE TABLE IF NOT EXISTS FIELD (
	NAME VARCHAR(50) NOT NULL PRIMARY KEY UNIQUE
);

-- Company table
CREATE TABLE IF NOT EXISTS COMPANY (
	COMPANY_NAME VARCHAR(60) NOT NULL,
	COMPANY_STANDING TEXT,
    -- Foreign keys
    COMPANY_COUNTRY VARCHAR(50) NOT NULL,
    COMPANY_STATE VARCHAR(50) NOT NULL,
    COMPANY_FIELD VARCHAR(50) NOT NULL,
    FOREIGN KEY (COMPANY_COUNTRY, COMPANY_STATE) 
    	REFERENCES LOCATION(COUNTRY, STATE),
    PRIMARY KEY (COMPANY_NAME, COMPANY_STATE, COMPANY_COUNTRY)
);


-- All fields can be null except pk, name and field and job name
CREATE TABLE IF NOT EXISTS JOB (
	JOB_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
    JOB_NAME VARCHAR(50) NOT NULL, 
	JOB_LEVEL VARCHAR(50),
	JOB_COMMITMENT VARCHAR(50),
	JOB_SHIFT_TIME VARCHAR(50),
	JOB_LOCATION_TYPE VARCHAR(50),
    JOB_FIELD VARCHAR(50) NOT NULL,
	FOREIGN KEY (JOB_FIELD) 
		REFERENCES FIELD(NAME)
);

-- User input table
CREATE TABLE IF NOT EXISTS USER_INPUT(
    INPUT_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
    YEARS_WORKING INTEGER NOT NULL,
	YEARS_AT_COMPANY INTEGER NOT NULL,
	SALARY INTEGER NOT NULL,
	NEGOTIATED VARCHAR(3),
	
    -- Foreign keys
	-- For job id
    USER_JOB_ID INTEGER NOT NULL,
    -- For country & state
    USER_COUNTRY VARCHAR(50) NOT NULL,
    USER_STATE VARCHAR(50) NOT NULL,
    -- For Company name
    USER_COMPANY_NAME VARCHAR(50) NOT NULL,
    -- For Company Location
    USER_COMPANY_COUNTRY VARCHAR(50) NOT NULL,
    USER_COMPANY_STATE VARCHAR(50) NOT NULL,
    
    FOREIGN KEY (USER_COUNTRY, USER_STATE) 
    	REFERENCES LOCATION(COUNTRY, STATE),
    FOREIGN KEY (USER_JOB_ID) 
    	REFERENCES JOB(JOB_ID),
    FOREIGN KEY (USER_COMPANY_NAME, USER_COMPANY_STATE, USER_COMPANY_COUNTRY) 
    	REFERENCES COMPANY(COMPANY_NAME, COMPANY_STATE, COMPANY_COUNTRY),
    -- Adds a constraint to ensure two of the same user inputs are never encountered (we never want duplicates)
    CONSTRAINT Unique_user_input 
    	UNIQUE (YEARS_WORKING, YEARS_AT_COMPANY, SALARY, NEGOTIATED, USER_JOB_ID, USER_COUNTRY, USER_STATE, USER_COMPANY_NAME, USER_COMPANY_STATE, USER_COMPANY_COUNTRY)
);

-- User Entry table
CREATE TABLE IF NOT EXISTS USER_ENTRY(
	ENTRY_ID INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT UNIQUE,
	USER_INPUT_ID INTEGER NOT NULL,
	FOREIGN KEY (USER_INPUT_ID)
		REFERENCES USER_INPUT(INPUT_ID)
);